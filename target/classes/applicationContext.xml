<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!--配置 jdbc.properties 文件路径[BENGIN]-->
	<context:property-placeholder location="classpath*:/jdbc.properties"/>
	<!--配置 jdbc.properties 文件路径[END]-->

	<!--配置 Spring 注解扫描基础包位置[BENGIN]-->
	<context:component-scan base-package="com.bdqn.ums">
		<!--对于spring容器来说，无法处理请求，因此对于请求处理注解@controller和@controllerAdvice 不需要进行扫描-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<!--配置 Spring 注解扫描基础包位置[END]-->

	<!--配置数据源 DataSource 信息[BEGIN]-->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
			<!--读取jdbc.properties 文件信息，依赖注入相关信息值-->
			<property name="driverClassName" value="${jdbc.driver}"/>
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>
			<property name="minIdle" value="${druid.minIdle}"/>
			<property name="maxActive" value="${druid.maxActive}"/>
			<property name="initialSize" value="${druid.initialSize}"/>
			<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
			<property name="maxEvictableIdleTimeMillis" value="${druid.maxEvictableIdleTimeMillis}"/>
		</bean>
	<!--配置数据源 DataSource 信息[END]-->

	<!--配置MyBatis 核心 sqlsessionFactoryBean[BEGIN]-->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--依赖注入dataSource信息-->
		<property name="dataSource" ref="dataSource"/>
		<!--设定Mapper文件映射路径-->
		<property name="mapperLocations" value="classpath*:/mapper/*.Mapper.xml"/>
		<!--设置类别名基础包-->
		<property name="typeAliasesPackage" value="com.bdqn.ums.pojo.entity"/>
	</bean>
	<!--配置MyBatis 核心 sqlsessionFactoryBean[END]-->

	<!--配置MyBatis 扫描接口信息[BEGIN]-->
	<bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!--设定SqlSessionFactoryBean 的id值-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
		<!--设置数据持久层接口路径-->
		<property name="basePackage" value="com.bdqn.ums.dao"/>
	</bean>
	<!--配置MyBatis 扫描接口信息[END]-->

	<!--配置使用Spring 所提供的事务处理机制[BEGIN]-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--依赖注入datasource信息-->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!--配置使用Spring 所提供的事务处理机制[END]-->

	<!--配置使用注解的方式进行事务处理[BEGIN]-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	<!--配置使用注解的方式进行事务处理[END]-->
</beans>